{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpeechProvider = exports.SpeechContext = void 0;\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar browser_client_1 = require(\"@speechly/browser-client\");\n\nvar types_1 = require(\"./types\");\n\nvar state_1 = require(\"./state\");\n/**\n * A React context that holds the state of Speechly SLU API client.\n * @public\n */\n\n\nexports.SpeechContext = react_1.default.createContext({\n  initialise: function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , Promise.resolve()];\n      });\n    });\n  },\n  toggleRecording: function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , Promise.resolve()];\n      });\n    });\n  },\n  speechState: types_1.SpeechState.Idle\n});\n/**\n * The provider for SpeechContext.\n *\n * Make sure you have only one SpeechProvider in your application,\n * because otherwise the audio will be mixed up and unusable.\n *\n * It is possible to switch the props on the fly, which will make provider stop current client if it's running\n * and start a new one.\n * @public\n */\n\nvar SpeechProvider =\n/** @class */\nfunction (_super) {\n  __extends(SpeechProvider, _super);\n\n  function SpeechProvider(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.initialiseAudio = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, client, clientState;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _a = this.state, client = _a.client, clientState = _a.clientState;\n              if (!(clientState === browser_client_1.ClientState.Disconnected)) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , client.initialize()];\n\n            case 1:\n              _b.sent();\n\n              _b.label = 2;\n\n            case 2:\n              return [2\n              /*return*/\n              , Promise.resolve()];\n          }\n        });\n      });\n    };\n\n    _this.toggleRecording = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, client, clientState, _b;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _a = this.state, client = _a.client, clientState = _a.clientState;\n              _b = clientState;\n\n              switch (_b) {\n                case browser_client_1.ClientState.Disconnected:\n                  return [3\n                  /*break*/\n                  , 1];\n\n                case browser_client_1.ClientState.Connected:\n                  return [3\n                  /*break*/\n                  , 4];\n\n                case browser_client_1.ClientState.Recording:\n                  return [3\n                  /*break*/\n                  , 6];\n              }\n\n              return [3\n              /*break*/\n              , 8];\n\n            case 1:\n              return [4\n              /*yield*/\n              , client.initialize()];\n\n            case 2:\n              _c.sent();\n\n              return [4\n              /*yield*/\n              , client.startContext()];\n\n            case 3:\n              _c.sent();\n\n              return [2\n              /*return*/\n              ];\n\n            case 4:\n              return [4\n              /*yield*/\n              , client.startContext()];\n\n            case 5:\n              _c.sent();\n\n              return [2\n              /*return*/\n              ];\n\n            case 6:\n              return [4\n              /*yield*/\n              , client.stopContext()];\n\n            case 7:\n              _c.sent();\n\n              return [2\n              /*return*/\n              ];\n\n            case 8:\n              return [2\n              /*return*/\n              , Promise.resolve()];\n          }\n        });\n      });\n    };\n\n    _this.initialiseClient = function (opts) {\n      var _a;\n\n      var client = new browser_client_1.Client(opts);\n      client.onStateChange(_this.onClientStateChange);\n      client.onSegmentChange(_this.onSegmentChange);\n      client.onTranscript(_this.onTranscript);\n      client.onEntity(_this.onEntity);\n      client.onIntent(_this.onIntent);\n\n      if (!((_a = opts.disableTenative) !== null && _a !== void 0 ? _a : false)) {\n        client.onTentativeIntent(_this.onTentativeIntent);\n        client.onTentativeTranscript(_this.onTentativeTranscript);\n        client.onTentativeEntities(_this.onTentativeEntities);\n      }\n\n      return client;\n    };\n\n    _this.onClientStateChange = function (clientState) {\n      _this.setState({\n        clientState: clientState,\n        recordingState: state_1.mapClientState(clientState)\n      });\n    };\n\n    _this.onSegmentChange = function (segment) {\n      if (!segment.isFinal) {\n        _this.setState({\n          segment: segment\n        });\n\n        return;\n      } // Reset individual values when a segment is finalised.\n\n\n      _this.setState({\n        segment: segment,\n        tentativeTranscript: undefined,\n        transcript: undefined,\n        tentativeEntities: undefined,\n        entity: undefined,\n        tentativeIntent: undefined,\n        intent: undefined\n      });\n    };\n\n    _this.onTentativeTranscript = function (contextId, segmentId, words, text) {\n      _this.setState({\n        tentativeTranscript: {\n          contextId: contextId,\n          segmentId: segmentId,\n          text: text,\n          words: words\n        }\n      });\n    };\n\n    _this.onTranscript = function (contextId, segmentId, word) {\n      _this.setState({\n        transcript: {\n          contextId: contextId,\n          segmentId: segmentId,\n          word: word\n        }\n      });\n    };\n\n    _this.onTentativeEntities = function (contextId, segmentId, entities) {\n      _this.setState({\n        tentativeEntities: {\n          contextId: contextId,\n          segmentId: segmentId,\n          entities: entities\n        }\n      });\n    };\n\n    _this.onEntity = function (contextId, segmentId, entity) {\n      _this.setState({\n        entity: {\n          contextId: contextId,\n          segmentId: segmentId,\n          entity: entity\n        }\n      });\n    };\n\n    _this.onTentativeIntent = function (contextId, segmentId, intent) {\n      _this.setState({\n        tentativeIntent: {\n          contextId: contextId,\n          segmentId: segmentId,\n          intent: intent\n        }\n      });\n    };\n\n    _this.onIntent = function (contextId, segmentId, intent) {\n      _this.setState({\n        intent: {\n          contextId: contextId,\n          segmentId: segmentId,\n          intent: intent\n        }\n      });\n    };\n\n    _this.state = {\n      client: _this.initialiseClient(props),\n      recordingState: types_1.SpeechState.Idle,\n      clientState: browser_client_1.ClientState.Disconnected\n    };\n    return _this;\n  }\n\n  SpeechProvider.prototype.render = function () {\n    var _a = this.state,\n        recordingState = _a.recordingState,\n        segment = _a.segment,\n        tentativeTranscript = _a.tentativeTranscript,\n        transcript = _a.transcript,\n        tentativeEntities = _a.tentativeEntities,\n        entity = _a.entity,\n        tentativeIntent = _a.tentativeIntent,\n        intent = _a.intent;\n    return react_1.default.createElement(exports.SpeechContext.Provider, {\n      value: {\n        initialise: this.initialiseAudio,\n        toggleRecording: this.toggleRecording,\n        speechState: recordingState,\n        segment: segment,\n        tentativeTranscript: tentativeTranscript,\n        transcript: transcript,\n        tentativeEntities: tentativeEntities,\n        entity: entity,\n        tentativeIntent: tentativeIntent,\n        intent: intent\n      }\n    }, this.props.children);\n  };\n\n  SpeechProvider.prototype.componentDidUpdate = function (prevProps) {\n    return __awaiter(this, void 0, void 0, function () {\n      var props, client, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            props = this.props; // We cannot compare microphone / api client / storage implementations,\n            // so changes in those will be ignored.\n            // A better approach for those would be to use separate contexts.\n\n            if (props.appId === prevProps.appId && props.language === prevProps.language && props.sampleRate === prevProps.sampleRate && props.debug === prevProps.debug && props.loginUrl === prevProps.loginUrl && props.apiUrl === prevProps.apiUrl) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            client = this.state.client;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , client.close()];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_1 = _a.sent();\n            console.error('Error closing Speechly client:', e_1);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            this.setState({\n              client: this.initialiseClient(props)\n            });\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SpeechProvider.prototype.componentWillUnmount = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.state.client.close()];\n\n          case 1:\n            _b.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            _a = _b.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return SpeechProvider;\n}(react_1.default.Component);\n\nexports.SpeechProvider = SpeechProvider;","map":{"version":3,"mappings":"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","names":["exports","react_1","createContext","initialise","resolve","toggleRecording","speechState","types_1","Idle","__extends","props","_super","_this","_a","state","client","clientState","browser_client_1","Disconnected","initialize","_b","Promise","Connected","Recording","_c","startContext","stopContext","opts","onStateChange","onClientStateChange","onSegmentChange","onTranscript","onEntity","onIntent","disableTenative","onTentativeIntent","onTentativeTranscript","onTentativeEntities","setState","recordingState","state_1","segment","isFinal","tentativeTranscript","undefined","transcript","tentativeEntities","entity","tentativeIntent","intent","contextId","segmentId","words","text","word","entities","initialiseClient","SpeechProvider","Provider","value","initialiseAudio","children","prevProps","appId","language","sampleRate","debug","loginUrl","apiUrl","close","console","error","e_1","Component"],"sources":["../src/context.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}